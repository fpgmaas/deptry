name: release-main

on:
  release:
    types: [published]
    branches: [main]

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up the environment
        uses: ./.github/actions/setup-pdm-env

      - name: Export tag
        id: vars
        run: echo tag=${GITHUB_REF#refs/*/} >> $GITHUB_OUTPUT

      - name: Build and publish
        run: |
          # Set version in pyproject.toml
          sed -i "s/^version = \".*\"/version = \"$RELEASE_VERSION\"/" pyproject.toml

          # Verify that the version has been updated correctly in pyproject.toml
          VERSION_FROM_TOML=$(python -c "import tomllib; print(tomllib.loads(open('pyproject.toml', 'rb').read())['project']['version'])")
          if [ "$VERSION_FROM_TOML" != "$RELEASE_VERSION" ]; then
            echo "Version mismatch: Expected $RELEASE_VERSION, got $VERSION_FROM_TOML"
            exit 1
          fi

          make build-and-publish
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}


  deploy-docs:
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up the environment
        uses: ./.github/actions/setup-pdm-env

      - name: Deploy documentation
        run: pdm run mkdocs gh-deploy --force
