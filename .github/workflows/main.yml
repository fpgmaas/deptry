name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

env:
  PYTHON_VERSION: '3.14'
  # renovate: datasource=pypi depName=uv
  UV_VERSION: '0.8.24'

permissions: {}

jobs:
  quality:
    runs-on: ubuntu-24.04
    steps:
      - name: Check out
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Install uv
        uses: astral-sh/setup-uv@85856786d1ce8acfbcc2f13a5f3fbd6b938f9f41 # v7.1.2
        with:
          version: ${{ env.UV_VERSION }}
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Install Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Python dependencies
        run: uv sync --frozen

      - name: Setup Rust toolchain
        run: rustup component add clippy rustfmt

      - name: Load pre-commit cache
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ env.PYTHON_VERSION }}-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Run pre-commit
        run: uvx pre-commit@${PRE_COMMIT_VERSION} run --all-files --show-diff-on-failure
        env:
          # renovate: datasource=pypi depName=pre-commit
          PRE_COMMIT_VERSION: '4.3.0'

      - name: Inspect dependencies with deptry
        run: uv run deptry python

  tests:
    strategy:
      matrix:
        os:
          - name: linux
            image: ubuntu-24.04
          - name: macos
            image: macos-15
          - name: windows
            image: windows-2025
        python-version:
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'
          - '3.13'
          - '3.14'
          - 'pypy3.11'
      fail-fast: false
    runs-on: ${{ matrix.os.image }}
    name: ${{ matrix.os.name }} (${{ matrix.python-version }})
    steps:
      - name: Check out
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Install uv
        uses: astral-sh/setup-uv@85856786d1ce8acfbcc2f13a5f3fbd6b938f9f41 # v7.1.2
        with:
          version: ${{ env.UV_VERSION }}
          enable-cache: true
          cache-dependency-glob: "uv.lock"
          cache-suffix: ${{ matrix.python-version }}

      - name: Install Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python dependencies
        run: uv sync --frozen --group test --group typing

      - name: Check typing
        run: uv run mypy
        if: ${{ matrix.os.name == 'linux' }}

      - name: Run unit tests
        run: uv run pytest tests/unit --cov --cov-config=pyproject.toml --cov-report=xml

      - name: Run functional tests
        run: uv run pytest tests/functional -n auto --dist loadgroup
        env:
          PYTHONIOENCODING: 'utf-8'

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        if: ${{ matrix.os.name == 'linux' && matrix.python-version == env.PYTHON_VERSION }}

  check-docs:
    runs-on: ubuntu-24.04
    steps:
      - name: Check out
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Install uv
        uses: astral-sh/setup-uv@85856786d1ce8acfbcc2f13a5f3fbd6b938f9f41 # v7.1.2
        with:
          version: ${{ env.UV_VERSION }}
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Install Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Check if documentation can be built
        run: uv run --only-group docs mkdocs build --strict
