name: Release

on:
  release:
    types: [published]

jobs:
  set-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Export tag
        id: vars
        run: echo tag=${GITHUB_REF#refs/*/} >> $GITHUB_OUTPUT

      - name: Update project version
        run: |
          sed -i "s/^version = \".*\"/version = \"$RELEASE_VERSION\"/" pyproject.toml
        env:
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}

      - name: Upload updated pyproject.toml
        uses: actions/upload-artifact@v4
        with:
          name: pyproject-toml
          path: pyproject.toml

  linux:
    runs-on: ubuntu-latest
    needs: [set-version]
    strategy:
      matrix:
        target: [x86_64, aarch64]
        python: ['3.11', 'pypy3.10']
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Download updated pyproject.toml
        uses: actions/download-artifact@v4
        with:
          name: pyproject-toml

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          architecture: 'x64'

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --interpreter ${{ startsWith(matrix.python, 'pypy') && matrix.python || format('python{0}', matrix.python) }}
          sccache: 'true'
          manylinux: auto

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.target }}-${{ matrix.python }}
          path: dist

  windows:
    runs-on: windows-latest
    needs: [set-version]
    strategy:
      matrix:
        target: [x64]
        python: ['3.11', 'pypy3.10']
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Download updated pyproject.toml
        uses: actions/download-artifact@v4
        with:
          name: pyproject-toml

      - uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version: ${{ matrix.python }}
          architecture: ${{ matrix.target }}

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --interpreter ${{ steps.setup-python.outputs.python-path }}
          sccache: 'true'

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.target }}-${{ matrix.python }}
          path: dist

  macos:
    runs-on: macos-latest
    needs: [set-version]
    strategy:
      matrix:
        target: [x86_64, aarch64]
        python: ['3.11']
        include:
          # It seems PyPy3.10 is not available on macOS arm64 yet
          - target: x86_64
            python: pypy3.10
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Download updated pyproject.toml
        uses: actions/download-artifact@v4
        with:
          name: pyproject-toml

      - uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version: ${{ matrix.python }}
          architecture: ${{ matrix.target == 'aarch64' && 'arm64' || 'x64' }}

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --interpreter ${{ steps.setup-python.outputs.python-path }}
          sccache: 'true'

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.target }}-${{ matrix.python }}
          path: dist

  sdist:
    runs-on: ubuntu-latest
    needs: [set-version]
    steps:
      - uses: actions/checkout@v4

      - name: Download updated pyproject.toml
        uses: actions/download-artifact@v4
        with:
          name: pyproject-toml

      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: [linux, windows, macos, sdist]
    steps:
      - uses: actions/download-artifact@v4

      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*

  check-docs:
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up the environment
        uses: ./.github/actions/setup-env
        with:
          python-version: '3.11'
          target: 'x86_64'

      - name: Deploy documentation
        run: pdm run mkdocs gh-deploy --force
