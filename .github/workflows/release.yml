name: Release

on:
  release:
    types: [published]
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.14'
  # renovate: datasource=pypi depName=uv
  UV_VERSION: '0.9.7'

permissions: {}

jobs:
  set-version:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Update project version
        if: ${{ github.event_name == 'release' }}
        run: |
          sed -i "s/^version = \".*\"/version = \"$RELEASE_VERSION\"/" pyproject.toml
        env:
          RELEASE_VERSION: ${{ github.ref_name }}

      - name: Upload updated pyproject.toml
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: pyproject-toml
          path: pyproject.toml

  linux:
    runs-on: ubuntu-24.04
    needs: [set-version]
    strategy:
      matrix:
        target: [x86_64, aarch64]
        manylinux: [auto, musllinux_1_1]
        python: ['3.14', 'pypy3.11']
    steps:
      - name: Check out
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Download updated pyproject.toml
        uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6.0.0
        with:
          name: pyproject-toml

      - name: Install Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: ${{ matrix.python }}

      - name: Build wheels
        uses: PyO3/maturin-action@86b9d133d34bc1b40018696f782949dac11bd380 # v1.49.4
        with:
          target: ${{ matrix.target }}
          manylinux: ${{ matrix.manylinux }}
          args: --release --out dist --interpreter ${{ startsWith(matrix.python, 'pypy') && matrix.python || format('python{0}', matrix.python) }}
          sccache: 'true'

      - name: Upload wheels
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: wheels-linux-${{ matrix.target }}-${{ matrix.manylinux }}-${{ matrix.python }}
          path: dist

  windows:
    runs-on: windows-2025
    needs: [set-version]
    strategy:
      matrix:
        target: [x64]
        python: ['3.14', 'pypy3.11']
        # PyPy doesn't support Windows ARM64.
        include:
          - python: '3.14'
            target: aarch64
    steps:
      - name: Check out
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Download updated pyproject.toml
        uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6.0.0
        with:
          name: pyproject-toml

      - name: Install Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        id: setup-python
        with:
          python-version: ${{ matrix.python }}

      - name: Build wheels
        uses: PyO3/maturin-action@86b9d133d34bc1b40018696f782949dac11bd380 # v1.49.4
        with:
          # Recent versions (last one tested 1.7.8) lead to failures on Windows aarch64, so forcing the version for now.
          maturin-version: '1.7.4'
          target: ${{ matrix.target }}
          args: --release --out dist --interpreter ${{ steps.setup-python.outputs.python-path }}
          sccache: 'true'

      - name: Upload wheels
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: wheels-windows-${{ matrix.target }}-${{ matrix.python }}
          path: dist

  macos:
    runs-on: macos-15
    needs: [set-version]
    strategy:
      matrix:
        target: [x86_64, aarch64]
        python: ['3.14', 'pypy3.11']
    steps:
      - name: Check out
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Download updated pyproject.toml
        uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6.0.0
        with:
          name: pyproject-toml

      - name: Install Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        id: setup-python
        with:
          python-version: ${{ matrix.python }}

      - name: Build wheels
        uses: PyO3/maturin-action@86b9d133d34bc1b40018696f782949dac11bd380 # v1.49.4
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --interpreter ${{ steps.setup-python.outputs.python-path }}
          sccache: 'true'

      - name: Upload wheels
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: wheels-macos-${{ matrix.target }}-${{ matrix.python }}
          path: dist

  sdist:
    runs-on: ubuntu-24.04
    needs: [set-version]
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Install Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Download updated pyproject.toml
        uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6.0.0
        with:
          name: pyproject-toml

      - name: Build sdist
        uses: PyO3/maturin-action@86b9d133d34bc1b40018696f782949dac11bd380 # v1.49.4
        with:
          command: sdist
          args: --out dist

      - name: Upload sdist
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: wheels-sdist
          path: dist

  publish:
    name: Publish
    runs-on: ubuntu-24.04
    needs:
      - linux
      - windows
      - macos
      - sdist
    steps:
      - uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6.0.0

      - name: Install Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Publish to PyPI
        if: ${{ github.event_name == 'release' }}
        uses: PyO3/maturin-action@86b9d133d34bc1b40018696f782949dac11bd380 # v1.49.4
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*

      - name: '[dry-run] Publish to PyPI'
        if: ${{ github.event_name != 'release' }}
        uses: PyO3/maturin-action@86b9d133d34bc1b40018696f782949dac11bd380 # v1.49.4
        with:
          command: upload
          args: --help

  publish-docs:
    runs-on: ubuntu-24.04
    needs: publish
    permissions:
      contents: write
    steps:
      - name: Check out
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install uv
        uses: astral-sh/setup-uv@85856786d1ce8acfbcc2f13a5f3fbd6b938f9f41 # v7.1.2
        with:
          version: ${{ env.UV_VERSION }}
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Install Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Deploy documentation
        if: ${{ github.event_name == 'release' }}
        run: uv run --only-group docs mkdocs gh-deploy --force

      - name: '[dry-run] Deploy documentation'
        if: ${{ github.event_name != 'release' }}
        run: uv run --only-group docs mkdocs gh-deploy --help
