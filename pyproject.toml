[tool.poetry]
name = "deptry"
version = "0.0.1"
description = "A command line utility to check for obsolete, missing and transitive dependencies in a Python project."
authors = ["Florian Maas <fpgmaas@gmail.com>"]
maintainers = ["Mathieu Kniewallner <mathieu.kniewallner@gmail.com>"]
repository = "https://github.com/fpgmaas/deptry"
documentation = "https://fpgmaas.github.io/deptry/"
readme = "README.md"
license = "MIT"
packages = [
    { include = "deptry" }
]
keywords = ["dependency", "poetry"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Quality Assurance",
]

[tool.poetry.dependencies]
python = ">=3.7,<4.0"
tomli = { version = "^2.0.1", python = "<3.11" }
click = "^8.0.0"
importlib-metadata = { version = "*", python = "<=3.7" }
chardet = "^5.0.0"

[tool.poetry.dev-dependencies]
mypy = "^0.981"
pre-commit = "^2.20.0"
pytest = "^7.1.2"
pytest-cov = "^3.0.0"
types-chardet = "^5.0.4"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ["py37"]
preview = true

[tool.isort]
profile = "black"

[tool.mypy]
files = ["deptry", "scripts"]
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = false
warn_unused_ignores = true
show_error_codes = true
ignore_missing_imports = true

[tool.deptry]
exclude = [
    "venv",
    ".venv",
    "docs",
    "tests",
    "scripts",
]
ignore_missing = ["tomllib"]

[tool.poetry.scripts]
deptry = "deptry.cli:deptry"
