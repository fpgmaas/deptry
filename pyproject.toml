[tool.poetry]
name = "deptry"
version = "0.0.1"
description = "A command line utility to check for obsolete, missing and transitive dependencies in a Python project."
authors = ["Florian Maas <fpgmaas@gmail.com>"]
repository = "https://github.com/fpgmaas/deptry"
documentation = "https://fpgmaas.github.io/deptry/"
readme = "README.md"
packages = [
  {include = "deptry"}
]

[tool.poetry.dependencies]
python = ">=3.7,<4.0"
tomli = { version = "^2.0.1", python = "<3.11" }
isort = "^5.10.1"
click = "^8.0.0"
importlib-metadata = { version = "*", python = "<=3.7" }
chardet = "^5.0.0"

[tool.poetry.dev-dependencies]
mypy = "^0.961"
pre-commit = "^2.20.0"
pytest = "^7.1.2"
pytest-cov = "^3.0.0"
mock = "^4.0.3"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
include = '\.pyi?$'
target-version = ['py39']
fast = true
exclude = '''
(
  /(                        # exclude a few common directories in the
    \.git                   # root of the project
    | \.pytest_cache
    | python-venv
    | \.venv
    | venv
    | build
    | dist
    | \.tox
  ))
'''

[tool.isort]
profile = "black"

[tool.mypy]
disallow_untyped_defs = "True"
disallow_any_unimported = "True"
no_implicit_optional = "True"
check_untyped_defs = "True"
warn_return_any = "False"
warn_unused_ignores = "True"
show_error_codes = "True"
ignore_missing_imports = "True"
exclude = [
    'venv',
    '\.venv',
    'tests'
]

[tool.deptry]
exclude = [
  'venv','.venv','docs','tests'
]
ignore_missing = ["tomllib"]

[tool.poetry.scripts]
deptry = "deptry.cli:deptry"
